spring.application.name=config-server
server.port=7001
# 通过 file:// 前缀来设置一个文件地址（Windows 系统需要使用 file:///）
# 占位符配置 URI
# {application} 代表了应用名，当客户端应用向 Config Server 发起获取配置的请求时，Config Server 会根据客户端的 spring.application.name
# 信息来填充 {application} 占位符以定位配置资源的存储位置，从而实现根据微服务应用的属性动态获取不同位置的配置。
spring.cloud.config.server.git.uri=https://github.com/songor/spring-cloud-learned
spring.cloud.config.server.git.search-paths=config-repo/{application}
spring.cloud.config.server.git.username={cipher}4985bc13e762b9d3df9fba897f64b4bd32174080a451a2f033d45453a0ad8dce
spring.cloud.config.server.git.password={cipher}c47747c5c25e01969ec551d217b1c5de0fd46c77342481518e8707ec8f39e294
# 详细的健康信息
management.endpoint.health.show-details=always
# 属性覆盖
# 利用该特性可以方便地为 Spring Cloud 应用配置一些共同属性或是默认属性
spring.cloud.config.server.overrides.timezone=GMT+8
# 安全保护
# 解決 spring cloud config server /encrypt Forbidden 错误
#spring.security.basic.enabled=true
#spring.security.basic.path=/**
#spring.security.ignored=/actuator/**
#spring.security.user.name=user
#spring.security.user.password=02795da9-8f86-4b22-aeec-7351a8bde965
# eureka
eureka.client.serviceUrl.defaultZone=http://peer1:1111/eureka/,http://peer2:1112/eureka/
# /actuator/bus-refresh 请求不再发送到具体的服务实例上，而是发送给 Config Server，并通过 destination 参数来指定需要更新配置的服务或实例
# 暴露 /actuator/bus-refresh 端点
management.endpoints.web.exposure.include=bus-refresh
# RabbitMQ
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=springcloud
#spring.rabbitmq.password=springcloud.123
