server.port=7002
# {application}
spring.application.name=config-client
# {profile}
spring.cloud.config.profile=dev
# {label}
spring.cloud.config.label=master
# config server address
# 我们必须将该参数配置在 bootstrap.properties、环境变量或是其他优先级高于应用 Jar 包内的配置信息中，才能正确加载到远程配置
#spring.cloud.config.uri=http://localhost:7001/
# Spring Boot 对配置文件的加载顺序，对于应用 jar 包之外的配置文件加载会优先于应用 jar 包内的配置内容，而通过 bootstrap.properties
# 对 config-server 的配置，使得该应用会从 config-server 中获取一些外部配置信息，这些信息的优先级比本地的内容要高，从而实现了外部化配置。
# 安全保护
spring.cloud.config.username=user
spring.cloud.config.password=02795da9-8f86-4b22-aeec-7351a8bde965
# 通过 Eureka 服务治理访问 Spring Cloud Config Server
spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.serviceId=config-server
# 快速失败
# 客户端优先判断 Config Server 获取是否正常，并快速响应失败的内容
spring.cloud.config.fail-fast=true
# eureka
eureka.client.serviceUrl.defaultZone=http://peer1:1111/eureka/,http://peer2:1112/eureka/
